# 実行ユーザー。www-dataは、Ubuntu上のWebサーバー（Apache、nginxなど）がデフォルトで通常の操作に使用するユーザー
user  www-data;

# 通常はCPUのコア数以下に設定。autoだとコア数を見て自動で設定してくれる。
worker_processes  auto;

# エラーログ出力先, ログレベル(debug, info, notice, warn, error, crit, alert, emerg)
error_log  /var/log/nginx/error.log warn;

# PIDを格納するファイルの出力場所(PIDはpsで確認可能なため直接参照はしなそう)
pid        /run/nginx.pid;

# イベント駆動型に関わる設定
events {
    # ファイルディスクリプタ上限値(worker_rlimit_nofile*worker_processes)以上設定不可
    # REF:https://qiita.com/mikene_koko/items/85fbe6a342f89bf53e89
    worker_connections  1024;
}

# webサーバ関連の設定
http {
    # MIMEタイプと拡張子の関連付けを定義したファイルの読み込み
    include       /etc/nginx/mime.types;

    # mime.typesで拡張子からMIMEタイプを決定できなかった場合のデフォルト値
    default_type  application/octet-stream;

    # access logのフォーマット
    log_format ltsv "time:$time_local"
                "\thost:$remote_addr"
                "\tforwardedfor:$http_x_forwarded_for"
                "\treq:$request"
                "\tstatus:$status"
                "\tmethod:$request_method"
                "\turi:$request_uri"
                "\tsize:$body_bytes_sent"
                "\treferer:$http_referer"
                "\tua:$http_user_agent"
                "\treqtime:$request_time"
                "\tcache:$upstream_http_x_cache"
                "\truntime:$upstream_http_x_runtime"
                "\tapptime:$upstream_response_time"
                "\tvhost:$host";

    access_log  /var/log/nginx/access.log  ltsv;

    # カーネルのsendfile()システムコールを用いる
    sendfile        on;

    # sendfileディレクティブ有効時に、TCP_NOPUSHオプションを有効にする.最も大きなパケットサイズで送信する
    #tcp_nopush     on;

    # クライアントと常時接続する時間
    # REF:https://qiita.com/toritori0318/items/a85d0b1efbd3ea1fc950
    keepalive_timeout  65;

    # レスポンスにgzipを使用.サーバー間の転送量を抑えられる
    #gzip  on;

    # 存在していない
    include /etc/nginx/conf.d/*.conf;

    # TAKI:/etc/nginx/sites-available/isuumo.confの設定を読み込まず、本ファイルに直接記載する（git管理下にするため）
    # include /etc/nginx/sites-enabled/*.conf;

    # /etc/nginx/sites-available/isuumo.confの設定(start)


    # TAKI:bot対策(採用案)
    map $http_user_agent $is_bot {
        default                      0;
        "~*^www.domain.com:Agent.*$" 1;
        "~*ISUCONbot(-Mobile)?" 1;
        "~*ISUCONbot-Image\/" 1;
        "~*Mediapartners-ISUCON" 1;
        "~*ISUCONCoffee" 1;
        "~*ISUCONFeedSeeker(Beta)?" 1;
        "~*crawler \(https:\/\/isucon\.invalid\/(support\/faq\/|help\/jp\/)" 1;
        "~*isubot" 1;
        "~*Isupider" 1;
        "~*Isupider(-image)?\+" 1;
        "~*(bot|crawler|spider)(?:[-_ .\/;@()]|$)/" 1;
    }

    server {
        root /home/isucon/isucon10-qualify/webapp/public;
        listen 80 default_server;
        listen [::]:80 default_server;

        # TAKI:bot対策(ボツ案)
        # if ( $http_user_agent ~ (ISUCONbot|Mediapartners-ISUCON|ISUCONCoffee|ISUCONFeedSeeker|isubot|Isupider|crawler|spider) ) {
        #     return 503;
        # }

        # TAKI:bot対策(採用案)
        if ($is_bot) {
            return 503;
        }

        location /api {
            proxy_pass http://localhost:1323;
        }

        location /initialize {
            proxy_pass http://localhost:1323;
        }

        location / {
            root /www/data;
        }
    }
    # /etc/nginx/sites-available/isuumo.confの設定(end)

}
